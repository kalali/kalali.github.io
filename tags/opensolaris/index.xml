<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>OpenSolaris - Tag - The Pensieve - Masoud Kalali&#39;s Blog</title>
        <link>https://kalali.blog/tags/opensolaris/</link>
        <description>OpenSolaris - Tag - The Pensieve - Masoud Kalali&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>kalali@gmail.com (Masoud Kalali)</managingEditor>
            <webMaster>kalali@gmail.com (Masoud Kalali)</webMaster><copyright>This work is licensed under a Attribution-NonCommercial-NoDerivatives 4.0 International (CC BY-NC-ND 4.0)</copyright><lastBuildDate>Mon, 12 Jul 2010 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://kalali.blog/tags/opensolaris/" rel="self" type="application/rss+xml" /><item>
    <title>Managing and Administrating OpenSolaris Zones</title>
    <link>https://kalali.blog/2010/07/managing-and-administrating-opensolaris-zones/</link>
    <pubDate>Mon, 12 Jul 2010 00:00:00 &#43;0000</pubDate>
    <author>Masoud Kalali</author>
    <guid>https://kalali.blog/2010/07/managing-and-administrating-opensolaris-zones/</guid>
    <description><![CDATA[Introduction The Solaris Zones provide us with kernel level virtualization allowing us to create multiple virtualized environments on top of the host system kernel. Each one of these virtualized environment is isolated from host and other virtualized environments despite running on the same Kernel which is provided by the host or global zone.
A typical example of using zones can be hosting different applications like the HTTP server, different application server instances for different applications, and the database server in separate zones.]]></description>
</item>
<item>
    <title>OpenSolaris Networking In Details</title>
    <link>https://kalali.blog/2010/07/opensolaris-networking-in-details/</link>
    <pubDate>Fri, 09 Jul 2010 00:00:00 &#43;0000</pubDate>
    <author>Masoud Kalali</author>
    <guid>https://kalali.blog/2010/07/opensolaris-networking-in-details/</guid>
    <description><![CDATA[Introduction In this chapter we are going to cover basic networking capabilities of OpenSolaris. While we will some of common utilities in the recipes, we will learn some more trivial ones here.
Learning netstat command The netstat command is well known for checking the active connections status in a system but it can provide a fair deal of other diagnostics. Following sample command shows some of the netstat use cases.]]></description>
</item>
<item>
    <title>Managing faults and services in OpenSolaris</title>
    <link>https://kalali.blog/2010/06/managing-faults-and-services-in-opensolaris/</link>
    <pubDate>Wed, 09 Jun 2010 00:00:00 &#43;0000</pubDate>
    <author>Masoud Kalali</author>
    <guid>https://kalali.blog/2010/06/managing-faults-and-services-in-opensolaris/</guid>
    <description><![CDATA[Introduction In this chapter we will cover fault and services administration and management. The fault management mostly deals with failing hardware components while service management and administration deals with software failures. A hardware failure is a faulty RAM module and a sample of failing service component is an HTTP server stopped functioning properly.
OpenSolaris is an enterprise operating system meaning that it should be resilient to both software and hardware failures and automatically recover from the failure and repair itself or in cases when it is not possible for the OS to repair and recover, it should notify some administrator to take action.]]></description>
</item>
</channel>
</rss>
