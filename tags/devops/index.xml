<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>DevOps - Tag - The Pensieve - Masoud Kalali&#39;s Blog</title>
        <link>https://kalali.blog/tags/devops/</link>
        <description>DevOps - Tag - The Pensieve - Masoud Kalali&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>kalali@gmail.com (Masoud Kalali)</managingEditor>
            <webMaster>kalali@gmail.com (Masoud Kalali)</webMaster><copyright>This work is licensed under a Attribution-NonCommercial-NoDerivatives 4.0 International (CC BY-NC-ND 4.0)</copyright><lastBuildDate>Sun, 03 Jul 2022 17:50:55 &#43;0200</lastBuildDate><atom:link href="https://kalali.blog/tags/devops/" rel="self" type="application/rss+xml" /><item>
    <title>Microservices Runtime Fragmentation</title>
    <link>https://kalali.blog/2022/07/microservices-fragmentation-and-what-to-do-about-it/</link>
    <pubDate>Sun, 03 Jul 2022 17:50:55 &#43;0200</pubDate>
    <author>Masoud Kalali</author>
    <guid>https://kalali.blog/2022/07/microservices-fragmentation-and-what-to-do-about-it/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/post-img/microservices-fragmentation-and-what-to-do-about-it.jpg" referrerpolicy="no-referrer">
            </div>Fragmentation of Java runtimes in a microservices-based architecture There are many many differences between the monolithic architecture and microservices-based architecture. One of them is the number of independently deployed bits of software, with a monolith there are usually many replicas of the same distribution running on many machines, virtualized or not. With the Microservices the number of independently deployed software systems grows as the different contexts raise&hellip; or an already existing context boundary grows enough to be split.]]></description>
</item>
</channel>
</rss>
