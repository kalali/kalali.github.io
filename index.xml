<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>The Pensieve - Masoud Kalali&#39;s Blog</title>
        <link>https://kalali.blog/</link>
        <description>Masoud Kalali&#39;s personal blog. Covering subjects ranging from tech strategy, leadership, software architecture, cloud native, and software development in general.</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>kalali@gmail.com (Masoud Kalali)</managingEditor>
            <webMaster>kalali@gmail.com (Masoud Kalali)</webMaster><copyright>This work is licensed under a Attribution-NonCommercial-NoDerivatives 4.0 International (CC BY-NC-ND 4.0)</copyright><lastBuildDate>Fri, 01 Jul 2022 18:00:02 &#43;0200</lastBuildDate>
            <atom:link href="https://kalali.blog/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>Kubernetes Active Active Clusters and Application Fault Tolerance</title>
    <link>https://kalali.blog/2022/07/kubernetes-active-active-clusters-and-application-fault-tolerance/</link>
    <pubDate>Fri, 01 Jul 2022 18:00:02 &#43;0200</pubDate>
    <author>Masoud Kalali</author>
    <guid>https://kalali.blog/2022/07/kubernetes-active-active-clusters-and-application-fault-tolerance/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/post-img/kubernetes-active-active-clusters-and-application-fault-tolerance.png" referrerpolicy="no-referrer">
            </div>From Monolith to Microservices Having redundancy in application space is pretty common. We have all seen them for decades in different ways. Hardware, software layer 4, or layer 7, etc. All of them what they do they direct traffic based on a given decision-making rule to a destination. Being weighted round-robin, resource/load-based metrics, etc. All they do is reliably direct traffic to a healthy node in the destination.
In a very simple and basic view with VMs and data centers, if VMs fail the load balancer will direct loads to identical VMs, all nodes more or less can handle any of the incoming requests (ignoring stickiness, etc.]]></description>
</item>
<item>
    <title>How to plan the architectural attributes?</title>
    <link>https://kalali.blog/2022/06/software-architecture-attributes-how-to-decide/</link>
    <pubDate>Tue, 21 Jun 2022 20:45:02 &#43;0200</pubDate>
    <author>Masoud Kalali</author>
    <guid>https://kalali.blog/2022/06/software-architecture-attributes-how-to-decide/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/post-img/software-architecture-attributes-how-to-decide.png" referrerpolicy="no-referrer">
            </div>Last week I was talking to a former colleague, he is running a SaaS startup now, and our conversation went around SRE, production, and reliability. We talked a lot about architectural attributes that relate or impact the incidents, from detection to recovery, and on to prevention. I thought to put some of my thoughts around architecture into a blog post since that was the core of our conversation. The next post I will cover more details on architecture for fault tolerance.]]></description>
</item>
<item>
    <title>Why not task based teams?</title>
    <link>https://kalali.blog/2022/05/on-the-lack-of-merit-of-task-based-teams/</link>
    <pubDate>Tue, 03 May 2022 20:45:02 &#43;0200</pubDate>
    <author>Masoud Kalali</author>
    <guid>https://kalali.blog/2022/05/on-the-lack-of-merit-of-task-based-teams/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/post-img/why-not-task-based-teams.jpeg" referrerpolicy="no-referrer">
            </div>What I have learned about successful teams is the trust and the belief in the team&rsquo;s mission. Trust in the mission, baring some issues like ill-fitting team members, etc. is the single most important factor for success of an individual, a team or a team of teams.
When the group of individuals that are part of the said team cannot see a mission they trust, going through the famous steps of Forming, Storming, Norming, and Performing will be harder.]]></description>
</item>
<item>
    <title>Smooth Developer Onboarding is as Important as Code Readability</title>
    <link>https://kalali.blog/2022/04/onboarding-as-important-as-code-readablity/</link>
    <pubDate>Tue, 26 Apr 2022 20:09:54 &#43;0200</pubDate>
    <author>Masoud Kalali</author>
    <guid>https://kalali.blog/2022/04/onboarding-as-important-as-code-readablity/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/post-img/onboarding-as-important-as-code-readablity.jpg" referrerpolicy="no-referrer">
            </div>When a new hire joins a team dealing with the development or sustaining of a large-scale application there are a few things that they would need to form a basic understanding of the system:
Deeper understanding of what the business about Get a view of the system&rsquo;s architecture for the software system and the deployment view. Get a bird&rsquo;s eye view of the system&rsquo;s dependencies. At least the immediate dependencies. History lessons, how the system came to be at the current state.]]></description>
</item>
<item>
    <title>Few tips for more success with architecture description</title>
    <link>https://kalali.blog/2022/04/few-tips-for-more-success-with-architecture-description/</link>
    <pubDate>Tue, 19 Apr 2022 21:16:32 &#43;0200</pubDate>
    <author>Masoud Kalali</author>
    <guid>https://kalali.blog/2022/04/few-tips-for-more-success-with-architecture-description/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/post-img/few-tips-for-more-success-with-architecture-description.jpg" referrerpolicy="no-referrer">
            </div>Introduction During the past 20 years I have seen trends come and go; one of the thing that has stayed around in one or another form is the term architecture and the architect role. Of course, there are plenty of overloads for the term and plenty of architect archetype like domain architect, enterprise architects, IT architect, network architect, software architect and you name it.
Wikipedia has a good definition of software architecture that I quote below:]]></description>
</item>
<item>
    <title>Impacts of a few in-depth write-ups and an abundance of getting started</title>
    <link>https://kalali.blog/2022/04/impacts-of-a-few-in-depth-write-ups-and-an-abundance-of-getting-started/</link>
    <pubDate>Tue, 05 Apr 2022 19:59:23 &#43;0200</pubDate>
    <author>Masoud Kalali</author>
    <guid>https://kalali.blog/2022/04/impacts-of-a-few-in-depth-write-ups-and-an-abundance-of-getting-started/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/post-img/impacts-of-a-few-in-depth-write-ups-and-an-abundance-of-getting-started.jpg" referrerpolicy="no-referrer">
            </div>Amount of information about how a new component or software system can solve all the problem in a specific area is sometimes overboard. The hotter the topic or the framework the more information is scattered around the web for it. For example:
Have you seen the plenty of use cases that every vendor in every segment of tech stack provide as part of the adoption or success story? How about the tutorial that shows how quickly and easily something as significant as a an observability solution can be set and be up and running?]]></description>
</item>
<item>
    <title>Building a development platform</title>
    <link>https://kalali.blog/2022/03/effective-internal-platform-product-manager/</link>
    <pubDate>Tue, 22 Mar 2022 19:16:32 &#43;0200</pubDate>
    <author>Masoud Kalali</author>
    <guid>https://kalali.blog/2022/03/effective-internal-platform-product-manager/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/post-img/building-a-development-platform.jpg" referrerpolicy="no-referrer">
            </div>Intro Building a new development platform, for example a new microservices oriented platform to replace an existing monolith software system, is a massive endeavour. I have been working on a development platform, the whole ecosystem from ways of working to pipeline in the past 3 years and the experience might help others. So I thought to write down some of the observation and experience before they fully turn into intrinsic/implicit knowledge and hard to pen.]]></description>
</item>
<item>
    <title>My thoughts on JSR 351, Java Identity API</title>
    <link>https://kalali.blog/2011/10/some-thought-on-jsr-351-java-identity-api/</link>
    <pubDate>Mon, 24 Oct 2011 00:00:00 &#43;0000</pubDate>
    <author>Masoud Kalali</author>
    <guid>https://kalali.blog/2011/10/some-thought-on-jsr-351-java-identity-api/</guid>
    <description><![CDATA[Identity, something that we hear more often these days with the whole web 2.0 and social services and more and more web based public services growing around us. The identity notion is an integral part of a security system in distributed services. Developing effective software system require an effective security and access control system which java provides, not exactly in the way that it should be in 2011 but it does provide what is the bare bone necessity to develop applications and frameworks on top of it and benefit from its presence.]]></description>
</item>
<item>
    <title>Brief overview of JSR 343: JavaTM Message Service 2.0</title>
    <link>https://kalali.blog/2011/05/jms2-jsr/</link>
    <pubDate>Tue, 17 May 2011 00:00:00 &#43;0000</pubDate>
    <author>Masoud Kalali</author>
    <guid>https://kalali.blog/2011/05/jms2-jsr/</guid>
    <description><![CDATA[Well, as many of us already know Oracle submitted the JSR for Java EE 7 which is sort of an umbrella JSR for many update in already existing specifications, new versions of some JSRs and some completely new JSRs which will be part of the grand Java EE 7 - JSR 342. One of these JSRs is the JSR 343 which introduces a new version of JMS into the platform as an evolution of its previous version, JSR-914, and will unify the JMS usage with what added to the platform in the past 8 years.]]></description>
</item>
<item>
    <title>Writing Solaris Service Management Facility (SMF) service manifest</title>
    <link>https://kalali.blog/2011/01/authoring-solaris-service-management-facility-smf-service-manifest/</link>
    <pubDate>Mon, 31 Jan 2011 00:00:00 &#43;0000</pubDate>
    <author>Masoud Kalali</author>
    <guid>https://kalali.blog/2011/01/authoring-solaris-service-management-facility-smf-service-manifest/</guid>
    <description><![CDATA[SMF services are basically daemons staying in background and waiting for the requests which they should server, when the request come the daemon wake ups, serve the request and then wait for the next request to come. The services are building using software development platforms and languages but they have one common aspect which we are going to discuss here. The service manifests which describe the service for the SMF and let the SMF manage and understand the service life cycle.]]></description>
</item>
</channel>
</rss>
